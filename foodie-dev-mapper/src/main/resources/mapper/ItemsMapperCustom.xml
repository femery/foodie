<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wwq.mapper.ItemsMapperCustom" >

  <select id="queryItemComments" resultType="cn.wwq.pojo.vo.ItemCommentVO" parameterType="Map">
    SELECT
       ic.comment_level as commentLevel,
       ic.content as content,
       ic.sepc_name as specName,
       ic.created_time as createdTime,
       u.face as userFace,
       u.nickname as nickname
    from
    items_comments ic
    LEFT JOIN
      users u
    ON
       ic.user_id = u.id
    WHERE
       ic.item_id = #{paramsMap.itemId}
       <if test="paramsMap.level != null and paramsMap.level != '' ">
          AND ic.comment_level = #{paramsMap.level}
       </if>
  </select>

    <select id="searchItems" resultType="cn.wwq.pojo.vo.SearchItemsVO"
            parameterType="Map">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl ,
            tempSpec.price_discount as price
        FROM
            items i
            LEFT JOIN items_img ii ON i.id = ii.item_id
            LEFT JOIN
            (
                SELECT
                    item_id,
                    MIN( price_discount ) AS price_discount
                FROM
                    items_spec
                GROUP BY
                    item_id
            ) tempSpec
            ON i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>
            order by
            <choose>
                <when test="paramsMap.sort == &quot;c&quot; ">
                    i.sell_counts desc
                </when>
                <when test="paramsMap.sort == &quot;p&quot; ">
                    tempSpec.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>

    </select>

    <select id="searchItemsByThirdCat" resultType="cn.wwq.pojo.vo.SearchItemsVO"
            parameterType="Map">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl ,
            tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN
        (
        SELECT
        item_id,
        MIN( price_discount ) AS price_discount
        FROM
        items_spec
        GROUP BY
        item_id
        ) tempSpec
        ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        and
        i.cat_id = #{paramsMap.catId}
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>

    </select>
    
    <select id="queryItemBySpecIds" parameterType="list" resultType="cn.wwq.pojo.vo.ShopcartVO">
        SELECT
             t_items.id as itemId,
             t_items.item_name as itemName,
             t_item_img.url as itemImgUrl,
             t_item_spec.id as specId,
             t_item_spec.`name` as specName,
             t_item_spec.price_discount as priceDiscount,
             t_item_spec.price_normal as priceNormal
        FROM
            items_spec t_item_spec
        LEFT JOIN
            items t_items
        on
            t_items.id = t_item_spec.item_id
        LEFT JOIN
            items_img t_item_img
        ON
            t_items.id = t_item_img.item_id
        WHERE
             t_item_img.is_main = 1
         AND
             t_item_spec.id IN
             <foreach collection="paramsList" index="index" separator="," item="specId" open="(" close=")">
                    #{specId}
             </foreach>

    </select>

    <update id="decreaseItemSpecStock" >

        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >= #{pendingCounts}

    </update>
</mapper>